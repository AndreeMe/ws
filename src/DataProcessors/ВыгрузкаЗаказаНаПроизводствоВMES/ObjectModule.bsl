Функция ВыполнитьПриложение(ПараметрыПроцедуры, IDСообщения = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(IDСообщения) Тогда
		
		// это сделано для отправки сообщения вручную из очереди...
		ОбработатьОбработанное = Ложь;
		ПростаяПередачаПараметров = Ложь;
		wsОбработчики.ОбработатьСообщение(IDСообщения, ОбработатьОбработанное, ПростаяПередачаПараметров);
		Возврат Неопределено;		
	
	КонецЕсли; 
	
	Если ПараметрыПроцедуры.Свойство("Ссылка") И ПараметрыПроцедуры.Свойство("ТипСообщения") Тогда
		
		// запись преварительного сообщения в очередь (только ссылка), запуск обработки...
		
		ID = Неопределено;
		
		wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
				"Отправка не выполнялась",
					ПараметрыПроцедуры.ТипСообщения, 
						Перечисления.wsНаправлениеСообщения.Исходящее,ID,
							ПараметрыПроцедуры.Ссылка, Ложь); // не обработано
		
		// запускаем обработку...
		ПростаяПередачаПараметров = Ложь;
		ВключаяОбработанное = Ложь;
		wsОбработчики.ОбработатьСообщение(ID, ВключаяОбработанное, ПростаяПередачаПараметров);
		
	ИначеЕсли ПараметрыПроцедуры.Свойство("ПростаяПередачаПараметров")	Тогда 
		
		Если НЕ ПараметрыПроцедуры.Обработано Тогда
			
			// обработка 
			СформироватьИОтправитьСообщение(ПараметрыПроцедуры);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецФункции

Процедура СформироватьИОтправитьСообщение(ПараметрыПроцедуры)
	
	// Номер	Заказ ordering  production	сейчас pp-заказ
	// Дата	Дата date	
	// ДокументОснование.Номер 	Наряд 	сейчас номер Наряда
	// ДатаПотребности	Дата завершения dateend	
	
	// ТЧ.Продукция.КоличествоУпаковок	Масса weight	Сумма по столбцу
	// ТЧ.Продукция.Номенклатура	Наименование изделия nomenclatureName 	«Номенклатура» берется из первой строки тч «Продукция»
	// ТЧ.Продукция.Номенклатура.Код	Код изделия nomenclatureCode	«Номенклатура» берется из первой строки тч «Продукция»
	// ТЧ.Продукция.Номенклатура.АЭМ_МаркаСтали	Марка стали SteelGrade	
	// АЭМ_Чертеж	Номер чертежа DrawingDesignation	
	
	// ТЧ.Продукция.Спецификация.МатериалыИУслуги.Номенклатура.Код 	Код материала material_num	«Спецификация» берется из первой строки тч «Продукция». «Номенклатура» берется из первой строки тч «МатериалыИУслуги»
	// ТЧ.Продукция.Спецификация.МатериалыИУслуги.Номенклатура.Наименование	Наименование материала material_name	
	// «Спецификация» берется из первой строки тч «Продукция». «Номенклатура» берется из первой строки тч «МатериалыИУслуги»
	
	// Вес материала  material_weight	Заполняется из документа «Карта анализа запроса». ТЧ «Параметры» по строке, 
	// где «Параметр» = «Масса поковки» (MASS_FORGE).
	
	// ПометкаУдаления		Пометка удаления (Значения: 0 – создан, 1 – помечен на удаление)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыПроцедуры.СсылкаНаОбъект);    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 КАК position,
		|	ЗаказНаПроизводство2_2.Номер КАК production,
		|	ЗаказНаПроизводство2_2.Дата КАК date,
		|	ЗаказНаПроизводство2_2.Статус КАК status,
		|	ЗаказНаПроизводство2_2.ДатаПотребности КАК dateend,
		|	ЗаказНаПроизводство2_2Продукция.Номенклатура.Артикул КАК nomenclatureCode,
		|	ЗаказНаПроизводство2_2Продукция.Номенклатура.Наименование КАК nomenclatureName,
		|	ЗаказНаПроизводство2_2.АЭМ_Чертеж КАК DrawingDesignation,
		|	АЭМ_КартаАнализаЗапросаПараметры.Значение КАК material_weight,
		|	"""" КАК party,
		|	"""" КАК numb_forg,
		|	"""" КАК numb_melt,
		|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура.Артикул КАК material_num,
		|	РесурсныеСпецификацииМатериалыИУслуги.Номенклатура.Наименование КАК material_name,
		|	ЗаказНаПроизводство2_2Продукция.Номенклатура.АЭМ_МаркаСтали.Код КАК SteelGrade,
		|	ЗаказНаПроизводство2_2Продукция.КоличествоУпаковок КАК weight,
		|	ЗаказНаПроизводство2_2.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаказНаПроизводство2_2.ДокументОснование КАК ДокументОснование
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство2_2
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
		|			ПО ЗаказНаПроизводство2_2Продукция.Спецификация = РесурсныеСпецификацииМатериалыИУслуги.Ссылка
		|				И (ЗаказНаПроизводство2_2Продукция.НомерСтроки = 1)
		|		ПО ЗаказНаПроизводство2_2.Ссылка = ЗаказНаПроизводство2_2Продукция.Ссылка
		|			И (ЗаказНаПроизводство2_2Продукция.НомерСтроки = 1)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АЭМ_КартаАнализаЗапроса.Параметры КАК АЭМ_КартаАнализаЗапросаПараметры
		|		ПО ЗаказНаПроизводство2_2.АЭМ_КартаАнализаЗапроса = АЭМ_КартаАнализаЗапросаПараметры.Ссылка
		|			И ЗаказНаПроизводство2_2.АЭМ_ИдентификаторСтрокиКАЗ = АЭМ_КартаАнализаЗапросаПараметры.КлючСвязи
		|			И (АЭМ_КартаАнализаЗапросаПараметры.Параметр.Наименование = ""Масса поковки"")";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗаказ     = РезультатЗапроса.Выбрать();
	ВыборкаЗаказ.Следующий();
	
	// 1.	ДокументОснование.Партнер.Наименование
	// 2.	ДокументОснование.АЭМ_ФилиалЗаказчик.Наименование	
	// 			Наименование клиента customer_name	п.1 – если документ «Заказ на производство» 
	//				создан на основании документов «Заказ клиента» и «Заказ давальца»
	//	п.2 - если документ «Заказ на производство» создан на основании документа «Заказ на внутреннее потребление».
	//		1.	ДокументОснование.Партнер.Код
	//		2.	ДокументОснование.АЭМ_ФилиалЗаказчик.Код	Код клиента customer_code	
	//			п.1 – если документ «Заказ на производство» создан на основании документов «Заказ клиента» и «Заказ давальца»
	//				п.2 - если документ «Заказ на производство» создан на основании документа «Заказ на внутреннее потребление».
	
	Если ТипЗнч(ВыборкаЗаказ.ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиента.Номер КАК ordering,
		|	ЗаказКлиента.Партнер.Наименование КАК customer_name,
		|	ЗаказКлиента.Партнер.Код КАК customer_code,
		|	ЗаказКлиентаТовары.АЭМ_КартаАнализаЗапроса.КАЗ КАК numberKAZ
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ПО (ЗаказКлиентаТовары.Ссылка = ЗаказКлиента.Ссылка)
		|			И (ЗаказКлиентаТовары.НомерСтроки = 1)
		|ГДЕ
		|	ЗаказКлиента.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ВыборкаЗаказ.ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаОснование = РезультатЗапроса.Выбрать();
		ВыборкаОснование.Следующий();
		
	ИначеЕсли ТипЗнч(ВыборкаЗаказ.ДокументОснование) = Тип("ДокументСсылка.ЗаказДавальца") Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказДавальца.Номер КАК ordering,
		|	ЗаказДавальца.Партнер.Код КАК customer_code,
		|	ЗаказДавальца.Партнер.Наименование КАК customer_name,
		|	NULL КАК numberKAZ
		|ИЗ
		|	Документ.ЗаказДавальца КАК ЗаказДавальца
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказДавальца.Продукция КАК ЗаказДавальцаПродукция
		|		ПО ЗаказДавальца.Ссылка = ЗаказДавальцаПродукция.Ссылка
		|			И (ЗаказДавальцаПродукция.НомерСтроки = 1)
		|ГДЕ
		|	ЗаказДавальца.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ВыборкаЗаказ.ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаОснование = РезультатЗапроса.Выбрать();
		ВыборкаОснование.Следующий();
		
		
	ИначеЕсли ТипЗнч(ВыборкаЗаказ.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление")  Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаВнутреннееПотребление.Номер КАК ordering,
		|	ЗаказНаВнутреннееПотребление.АЭМ_ФилиалЗаказчик.Код КАК customer_code,
		|	ЗаказНаВнутреннееПотребление.АЭМ_ФилиалЗаказчик.Наименование КАК customer_name,
		|	ЗаказНаВнутреннееПотреблениеТовары.АЭМ_КартаАнализаЗапроса.КАЗ КАК numberKAZ
		|ИЗ
		|	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ЗаказНаВнутреннееПотреблениеТовары
		|		ПО ЗаказНаВнутреннееПотребление.Ссылка = ЗаказНаВнутреннееПотреблениеТовары.Ссылка
		|			И (ЗаказНаВнутреннееПотреблениеТовары.НомерСтроки = 1)
		|ГДЕ
		|	ЗаказНаВнутреннееПотребление.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ВыборкаЗаказ.ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаОснование = РезультатЗапроса.Выбрать();
		ВыборкаОснование.Следующий();
		
	КонецЕсли; 

	ОтправитьСообщение(ВыборкаЗаказ, ВыборкаОснование, ПараметрыПроцедуры);	
	
КонецПроцедуры

Процедура ОтправитьСообщение(ВыборкаЗаказ, ВыборкаОснование, ПараметрыПроцедуры, Отказ = Ложь)
	
	
	wsНастройкиВебСервисов =  wsОбработчики.ОписаниеВебСервиса(ПараметрыПроцедуры.ТипСообщения);
	
	// Подключение
	Определения = Новый WSОпределения(wsНастройкиВебСервисов.МестоположениеWSDL, 
							wsНастройкиВебСервисов.ИмяПользователя, wsНастройкиВебСервисов.Пароль);
							
							
	ОписниеТипаЧисло = Новый ОписаниеТипов("Число");							
	position = ОписниеТипаЧисло.ПривестиЗначение(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаЗаказ.position));							
							
	Попытка
		Прокси = Новый WSПрокси(Определения,
									wsНастройкиВебСервисов.URIПространстваИмен, 
											wsНастройкиВебСервисов.ИмяWEBСервиса, 
													wsНастройкиВебСервисов.ИмяТочкиПодключения,,60);
		Прокси.Пользователь = wsНастройкиВебСервисов.ИмяПользователя;
		Прокси.Пароль = wsНастройкиВебСервисов.Пароль;
		
		Результат = Прокси.PutOrders(
		XMLСтрока(ВыборкаОснование.ordering),
		ВыборкаЗаказ.position,
		XMLСтрока(ВыборкаЗаказ.production),
		ВыборкаЗаказ.date,
		ВыборкаЗаказ.dateend,
		XMLСтрока(ВыборкаЗаказ.status),
		XMLСтрока(ВыборкаЗаказ.nomenclatureCode),
		XMLСтрока(ВыборкаЗаказ.nomenclatureName),
		XMLСтрока(ВыборкаЗаказ.DrawingDesignation),
		ВыборкаЗаказ.weight,  // число
		XMLСтрока(ВыборкаЗаказ.party),
		XMLСтрока(ВыборкаЗаказ.numb_forg),
		XMLСтрока(ВыборкаЗаказ.numb_melt),
		XMLСтрока(ВыборкаОснование.customer_name),
		XMLСтрока(ВыборкаОснование.customer_code),
		"", // ИНН
		"", // КПП
		XMLСтрока(ВыборкаЗаказ.material_num),
		XMLСтрока(ВыборкаЗаказ.material_weight),       // srtring
		XMLСтрока(ВыборкаЗаказ.material_name),
		XMLСтрока(ВыборкаЗаказ.SteelGrade)
		);
		
		Если Результат Тогда
			Сообщить("Готово.");
		Иначе
			ВызватьИсключение "Ошибка на стороне приемника.";
			Возврат;
		КонецЕсли; 
		
	Исключение
		Отказ = Истина;
		ВызватьИсключение "Ошибка: " + ОписаниеОшибки();
		Возврат;
	КонецПопытки;
	
	Текст = 
		"ordering " + ВыборкаОснование.ordering + Символы.ПС +
		"position "  + ВыборкаЗаказ.position + Символы.ПС +
		"production " + ВыборкаЗаказ.production + Символы.ПС +
		"date " + ВыборкаЗаказ.date + Символы.ПС +
		"status " + ВыборкаЗаказ.status + Символы.ПС +
		"dateend " + ВыборкаЗаказ.dateend + Символы.ПС +
		"nomenclatureCode " + ВыборкаЗаказ.nomenclatureCode + Символы.ПС +
		"nomenclatureName " + ВыборкаЗаказ.nomenclatureName + Символы.ПС +
		"DrawingDesignation " + ВыборкаЗаказ.DrawingDesignation + Символы.ПС +
		"weight " + ВыборкаЗаказ.weight + Символы.ПС +
		"party " + ВыборкаЗаказ.party + Символы.ПС +
		"numb_forg " + ВыборкаЗаказ.numb_forg + Символы.ПС +
		"numb_melt " + ВыборкаЗаказ.numb_melt + Символы.ПС +
		"customer_name " + ВыборкаОснование.customer_name + Символы.ПС +
		"customer_code " + ВыборкаОснование.customer_code + Символы.ПС +
		"" + Символы.ПС + // ИНН
		"" + Символы.ПС + // КПП
		"material_num " + ВыборкаЗаказ.material_num + Символы.ПС +
		"material_weight " + ВыборкаЗаказ.material_weight + Символы.ПС +
		"material_name " + ВыборкаЗаказ.material_name + Символы.ПС +
		"SteelGrade " + ВыборкаЗаказ.SteelGrade;

	
	Если Не Отказ Тогда

		Попытка
			
			// Обновляем сообщение в регистре
			wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
				Текст, 
					ПараметрыПроцедуры.ТипСообщения, 
						Перечисления.wsНаправлениеСообщения.Исходящее,
							ПараметрыПроцедуры.IDСообщения,
								ПараметрыПроцедуры.СсылкаНаОбъект, 
									Истина, // обработано
										ПараметрыПроцедуры.Дата); 
		Исключение
			
			ВызватьИсключение "Ошибка: " + ОписаниеОшибки();
			
		КонецПопытки; 
	
	КонецЕсли; 
	

КонецПроцедуры
 
 