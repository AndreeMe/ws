Процедура ЗаполнитьОбеспечениеИДатыОтгрузки(
		ДокументОбъект, 
			ПереченьВариантов = Неопределено, 
				ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПереченьВариантов = Неопределено Тогда
		ПереченьВариантов = Новый Массив(2);
		ПереченьВариантов[0] = Перечисления.ВариантыОбеспечения.Требуется; // К обеспечению...
		ПереченьВариантов[1] = Перечисления.ВариантыОбеспечения.Отгрузить; // Отгрузить...
	КонецЕсли; 
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = Новый Структура(
			"ПереченьВариантов, ИзменятьОбособление, ЗаполнятьЦелымиУпаковками", 
				ПереченьВариантов, Истина, Ложь);
	КонецЕсли; 
	
	ПутиКДанным = Новый Соответствие; //Описание особенностей формы
	ПутиКДанным.Вставить("ДатаОтгрузкиРабот", "ДатаОтгрузки"); // дату отгрузки работ необходимо брать из поля "Дата отгрузки".
	
	Товары  = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Выгрузить();
	
	Пустая  = Товары.Скопировать();
	Пустая.Очистить();
	
	// дальше понадобится тип номенклатуры и ссылка в строке...
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Ссылка, "Подразделение");
	Товары.Колонки.Добавить("ТипНоменклатуры"	, Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	Товары.Колонки.Добавить("Ссылка"			, Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	// Товары.Колонки.Добавить("Назначение"		, Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	Товары.Колонки.Добавить("Подразделение"		, Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Товары.Колонки.Добавить("Идентификатор"		, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 0, ДопустимыйЗнак.Неотрицательный)));
	Для каждого Строка Из Товары Цикл
		Строка.ТипНоменклатуры = 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Номенклатура, "ВидНоменклатуры"),
		"ТипНоменклатуры");
		Строка.Ссылка = ДокументОбъект.Ссылка;
		Строка.Подразделение = ЗначенияРеквизитов.Подразделение;
		Строка.Идентификатор = Строка.НомерСтроки - 1;
	КонецЦикла; 
	
	Таблица = ОбеспечениеСервер.ТаблицаЗаполнениеОбеспеченияУниверсальный(
		Товары,	Пустая,	Пустая,	ДокументОбъект.Ссылка, Неопределено, Неопределено, ПараметрыЗаполнения);
	
	
	Если ТипЗнч(Таблица) <> Тип("ТаблицаЗначений") Тогда
		Возврат; // какие-то ошибки ???
	КонецЕсли;
	
	ИсходнаяТаблица = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Выгрузить();
	ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Очистить();
	
	// перенос даты отгрузки..
	Для Каждого СтрокаОбеспечения Из Таблица Цикл
		
		СтрокаТовары = ИсходнаяТаблица[СтрокаОбеспечения.Идентификатор];
		ЗаполнитьЗначенияСвойств(СтрокаТовары, СтрокаОбеспечения, "Количество,ВариантОбеспечения");
		СтрокаТовары.КоличествоУпаковок = СтрокаТовары.Количество;
		ЗаполнитьЗначенияСвойств(ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Добавить(), СтрокаТовары);
		
		Если ДокументОбъект.НеОтгружатьЧастями Тогда
			ДокументОбъект.ДатаОтгрузки = Макс(СтрокаОбеспечения.ДатаОтгрузки, ДокументОбъект.ДатаОтгрузки);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьОбеспечениеЭтапПроизводства2_2(ДокументОбъект) Экспорт
	
	Если Ложь Тогда
		ДокументОбъект = Документы.ЭтапПроизводства2_2.СоздатьДокумент();
	КонецЕсли; 
	
	ДанныеЗаполнения = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Выгрузить();
	ДанныеЗаполнения.Колонки.Добавить("Идентификатор", );
	ДанныеЗаполнения.Колонки.Добавить("Отгружено", );
	
	Для каждого Строка Из ДанныеЗаполнения Цикл
		Строка.Идентификатор = Строка.НомерСтроки - 1;
		Строка.Отгружено = 0;
	КонецЦикла; 
	
	Документы.ЭтапПроизводства2_2.ЗаполнитьВариантОбеспечения(ДокументОбъект, Неопределено, "ИндексыСтрок", ДанныеЗаполнения);
	
КонецПроцедуры
