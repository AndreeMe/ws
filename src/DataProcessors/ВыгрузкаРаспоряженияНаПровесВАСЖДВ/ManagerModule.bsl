Функция ВыполнитьПриложение(РаспоряжениеНаПровес, ТипПодключаемойОбработки) Экспорт

	// Найдем описание веб-сервиса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипСообщения", ТипПодключаемойОбработки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	wsОбработки.НастройкаВебСервиса КАК НастройкаВебСервиса
	|ИЗ
	|	РегистрСведений.wsОбработки КАК wsОбработки
	|ГДЕ
	|	wsОбработки.ТипСообщения = &ТипСообщения";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не задано описание веб-сервиса для сообщний вида " + ТипПодключаемойОбработки;
		Сообщение.Сообщить(); 
		Возврат Ложь;		
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	wsНастройкиВебСервисов = Выборка.НастройкаВебСервиса;
	
	ДвоичныеДанные = ТипПодключаемойОбработки.СхемаXSD.Получить();
	Если Не ДвоичныеДанные = Неопределено Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xsd");
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		врФабрикаXDTO = СоздатьФабрикуXDTO(ИмяВременногоФайла);
	Иначе
		врФабрикаXDTO = ФабрикаXDTO;
	КонецЕсли; 
	
	item = ФабрикаXDTO.Создать(врФабрикаXDTO.Тип("http://aem", "WeightOrderItem")); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", РаспоряжениеНаПровес);
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТранспортнаяНакладнаяДокументыОснования.Ссылка.АвтомобильГосударственныйНомер КАК АвтомобильГосударственныйНомер,
		|	ТранспортнаяНакладнаяДокументыОснования.Ссылка.АЭМ_НомерЖдВагона КАК АЭМ_НомерЖдВагона
		|ПОМЕСТИТЬ врТН
		|ИЗ
		|	Документ.ТранспортнаяНакладная.ДокументыОснования КАК ТранспортнаяНакладнаяДокументыОснования
		|ГДЕ
		|	ТранспортнаяНакладнаяДокументыОснования.ДокументОснование = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	АЭМ_РаспоряжениеНаПровес.Ссылка КАК UID,
		|	АЭМ_РаспоряжениеНаПровес.Номер КАК NUMBER,
		|	1 КАК ROW_ID,
		|	"""" КАК TARE,
		|	АЭМ_РаспоряжениеНаПровес.Дата КАК DATETIME,
		|	АЭМ_РаспоряжениеНаПровес.ТипОперации КАК OPERATION,
		|	АЭМ_РаспоряжениеНаПровес.КоличествоПлановое КАК WEIGHT,
		|	АЭМ_РаспоряжениеНаПровес.СкладОтправитель.АЭМ_КодСклада КАК WORKSHOP_OUT_ID,
		|	АЭМ_РаспоряжениеНаПровес.СкладПолучатель.АЭМ_КодСклада КАК WORKSHOP_IN_ID,
		|	АЭМ_РаспоряжениеНаПровес.СкладОтправитель.Наименование КАК WORKSHOP_OUT_NAME,
		|	АЭМ_РаспоряжениеНаПровес.СкладПолучатель.Наименование КАК WORKSHOP_IN_NAME,
		|	АЭМ_РаспоряжениеНаПровес.Номенклатура.Наименование КАК NOMENCLATURE_NAME,
		|	АЭМ_РаспоряжениеНаПровес.Ответственный.Наименование КАК USER,
		|	АЭМ_РаспоряжениеНаПровес.Номенклатура.Код КАК NOMENCLATURE_ID,
		|	АЭМ_РаспоряжениеНаПровес.Номенклатура.ЕдиницаИзмерения.Наименование КАК UNIT,
		|	врТН.АЭМ_НомерЖдВагона КАК VAGON,
		|	врТН.АвтомобильГосударственныйНомер КАК CAR
		|ИЗ
		|	Документ.АЭМ_РаспоряжениеНаПровес КАК АЭМ_РаспоряжениеНаПровес
		|		ЛЕВОЕ СОЕДИНЕНИЕ врТН КАК врТН
		|		ПО (ИСТИНА)
		|ГДЕ
		|	АЭМ_РаспоряжениеНаПровес.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Для каждого Кол Из РезультатЗапроса.Колонки Цикл
		Если Кол.Имя = "UID" Тогда
			item[Кол.Имя] = ВыборкаДетальныеЗаписи[Кол.Имя].УникальныйИдентификатор();	
		ИначеЕсли Кол.Имя = "DATETIME" Тогда
			item[Кол.Имя] = Формат(ВыборкаДетальныеЗаписи[Кол.Имя], "ДФ=yyyy-MM-dd");	
		ИначеЕсли Кол.Имя = "WEIGHT" Тогда
			item[Кол.Имя] = ВыборкаДетальныеЗаписи[Кол.Имя];
		ИначеЕсли ЗначениеЗаполнено(ВыборкаДетальныеЗаписи[Кол.Имя]) Тогда
			item[Кол.Имя] = XMLСтрока(Строка(ВыборкаДетальныеЗаписи[Кол.Имя]));	
		Иначе
			item[Кол.Имя] = Неопределено;	
		КонецЕсли; 
	КонецЦикла; 
	
	// Подключение
	МестоположениеWSDL 			= wsНастройкиВебСервисов.МестоположениеWSDL;
	ИмяПользователя 			= wsНастройкиВебСервисов.ИмяПользователя;
	Пароль 						= wsНастройкиВебСервисов.Пароль;                     
	ИмяСервиса 					= wsНастройкиВебСервисов.ИмяWEBСервиса;
	ИмяТочкиПодключения 		= wsНастройкиВебСервисов.ИмяТочкиПодключения;
	URIПространстваИменСервиса 	= wsНастройкиВебСервисов.URIПространстваИмен;
	
	Определения = Новый WSОпределения(МестоположениеWSDL, ИмяПользователя, Пароль);
	
	Прокси = Новый WSПрокси(Определения, URIПространстваИменСервиса, ИмяСервиса, ИмяТочкиПодключения,,3);
	Прокси.Пользователь = ИмяПользователя;
	Прокси.Пароль = Пароль;
	
	Результат = Ложь;
	Попытка
		Результат = Прокси.Ping(); // регистр имеет значение
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Если Не Результат Тогда
		Сообщить("Веб-сервис не доступен.");
	КонецЕсли; 
	
	// Сервис жив, далее работаем с ним и ждем не более минуты
	Прокси = Новый WSПрокси(Определения, URIПространстваИменСервиса, ИмяСервиса, ИмяТочкиПодключения,,60);
	Прокси.Пользователь = ИмяПользователя;
	Прокси.Пароль = Пароль;
	Результат = Прокси.LoadWeightOrder(item);
	//Сообщить("Готово.");
	
	ХМЛ = wsОбработчики.XDTOtoXML(item);

	// пишем сообщение в регистр на память
	wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
				ХМЛ, 
					ТипПодключаемойОбработки, 
						Перечисления.wsНаправлениеСообщения.Исходящее,,
							РаспоряжениеНаПровес, Истина); // обработано
	
КонецФункции

