Функция ВыполнитьПриложение(ХранилищеЗначения, ID = Неопределено) Экспорт
	
	Если ТипЗнч(ХранилищеЗначения) = Тип("ХранилищеЗначения") Тогда
		Сообщение = ХранилищеЗначения.Получить();
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(Сообщение);
		ОбXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
		ЧтениеXML.Закрыть();
	ИначеЕсли ТипЗнч(ХранилищеЗначения) = Тип("ОбъектXDTO") Тогда 
		ОбXDTO = ХранилищеЗначения;
	КонецЕсли; 
	
	Результат = СформироватьОтветноеСообщение(ОбXDTO);
	
	СообщениеСтрокой = wsОбработчики.XDTOtoXML(Результат);
	
	ТипСообщения = "IntermechOperations";
	
	wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
		СообщениеСтрокой, ТипСообщения, Перечисления.wsНаправлениеСообщения.Исходящее,,,Истина); // обработано
	
	Возврат Результат;
	
КонецФункции
     
Функция СформироватьОтветноеСообщение(ОбXDTO)
	
	СтруктураДанных = ИнтеграцияИС.ОбъектXDTOВСтруктуру(ОбXDTO);
	
	 Если СтруктураДанных.Свойство("op") Тогда
		// если есть "ор", то это термообработка
	 	Возврат СформироватьОтветноеСообщениеТермоорбработка(ОбXDTO);
	 КонецЕсли; 
	 
	 Если СтруктураДанных.Свойство("item") Тогда
		// если есть "item", то это ковка
	 	Возврат СформироватьОтветноеСообщениеКовка(ОбXDTO);
	 КонецЕсли; 
	
КонецФункции

Функция СформироватьОтветноеСообщениеТермоорбработка(ОбXDTO)
	
	ОбработатьМассивСтруктурТермоорбработка(ОбXDTO.op);
	
	Возврат ОбXDTO;

КонецФункции // ()
 
Функция СформироватьОтветноеСообщениеКовка(ОбXDTO)

	// Поиск по идентификатору «Номер Заказа на производство» строки документа – родителя «Заказ клиента»;
	// В «Заказе клиента» по идентифицированной строке выбрать документ «Карта анализа запроса»; 
	// В выбранном документе «Карта анализа запроса» в таблице «Параметры» выбрать предопределенное значение номера параметра «Цикл ПДУ»;
	// Выбрать в этом значении справочника «Цикл ПДУ» набор технологических операций, 
	//	соответствующий этому «Циклу ПДУ» и суммовых показателей трудоемкости по каждой из них на дату запроса 
	//		из регистра сведений «Данные цикла производства»;
	// Сформировать обратный файл формата XML с этим набором тех.операций и  значениями трудоемкости по ним по утвержденной структуре файла;
	// Передать файл системе – источнику – «Интермех»
	
	Возврат ОбработатьМассивСтруктурКовка(ОбXDTO.item);
	
КонецФункции // ()

Функция ОбработатьМассивСтруктурТермоорбработка(Об)
	
	МассивНомеров = Новый Массив;
	
	Если ТипЗнч(Об) = Тип("ОбъектXDTO") Тогда
		МассивНомеров.Добавить(Об.KDPOS);
	ИначеЕсли ТипЗнч(Об) = Тип("СписокXDTO") Тогда
		Для каждого Эл Из Об Цикл
			Если ТипЗнч(Эл.KDPOS) = Тип("Строка") Тогда
				МассивНомеров.Добавить(Эл.KDPOS);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивНомеров);
	
	Выборка = ДлительностьТермообработкиПоЗаказам(МассивНомеров);
	
	Отбор = Новый Структура("KDPOS");
	
	Если ТипЗнч(Об) = Тип("ОбъектXDTO") Тогда
		Об.LTXA1 = ПерекодироватьСтроку(Об.LTXA1, "UTF-8");
		Отбор.KDPOS = Об.KDPOS;
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Отбор) Тогда
			Об.VGW01 = Выборка.VGW01;
			Об.ARBPL = Строка(Выборка.ARBPL);
		Иначе
			Об.VGW01 = 0;
			Об.ARBPL = "";
		КонецЕсли;
	ИначеЕсли ТипЗнч(Об) = Тип("СписокXDTO") Тогда
		Для каждого Эл Из Об Цикл
			// Эл.LTXA1 = ПерекодироватьСтроку(Эл.LTXA1, КодировкаТекста.UTF8);
			Отбор.KDPOS = Эл.KDPOS;
			Выборка.Сбросить();
			Если Выборка.НайтиСледующий(Отбор) Тогда
				Эл.VGW01 = Выборка.VGW01;
				Эл.ARBPL = Строка(Выборка.ARBPL);
			Иначе
				Эл.VGW01 = 0;
				Эл.ARBPL = "";
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли; 

КонецФункции // ()

Функция ОбработатьМассивСтруктурКовка(Об)
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	МассивНомеров = Новый Массив;
	
	Если ТипЗнч(Об) = Тип("ОбъектXDTO") Тогда
		МассивНомеров.Добавить(Об.KDPOS);
	ИначеЕсли ТипЗнч(Об) = Тип("СписокXDTO") Тогда
		Для каждого Эл Из Об Цикл
			Если ТипЗнч(Эл.KDPOS) = Тип("Строка") Тогда
				МассивНомеров.Добавить(Эл.KDPOS);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивНомеров);
	
	Выборка = ДлительностьОперацийКовкиПоЗаказам(МассивНомеров);
	
	// здесь надо формировать XDTO, во входящем файле нет данных...
	
	ope  = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://aem_intermech", "OPERATIONS"));
	
	Пока Выборка.Следующий() Цикл
		
		item = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://aem_intermech", "item"));  
		item.KDPOS = XMLСтрока(Выборка.KDPOS);
		item.KDAUF = XMLСтрока(Выборка.KDAUF);
		item.VTPOS = XMLСтрока(Выборка.VTPOS);
		item.LTXA1 = XMLСтрока(Выборка.LTXA1);
		item.ARBPL = XMLСтрока(Выборка.ARBPL);
		item.CEH   = XMLСтрока(Выборка.CEH);
		item.VGW01 = ОписаниеТипаЧисло.ПривестиЗначение(Выборка.VGW01);
		
	   	ope.item.Добавить(item);
		
	КонецЦикла; 
	
	Возврат ope;

КонецФункции // ()

Функция ДлительностьТермообработкиПоЗаказам(МассивНомеров)
	
	// найти заказ на производство по уникальному номеру
	// взять единсвенную строку с продукцией
	// В выбранном справочник «Ресурсная спецификация» 
	// в таблице «Материалы и работы» выбрать строки работ из справочника «Номенклатура» 
	// со своими группами оборудования, которые имеют в своем наименовании значения из таблицы ниже:
	//
	//Наименование операции	Группы оборудования
	//6010	BEP
	//6016	BEP
	//6017	BEP
	//6011	BGP
	//6014	MGP
	//6019	MEP
	//5201-5205	TP_15
	
	Массив = Новый Массив;
	Массив.Добавить("6010");
	Массив.Добавить("6016");
	Массив.Добавить("6017");
	Массив.Добавить("6011");
	Массив.Добавить("6014");
	Массив.Добавить("6019");
	Массив.Добавить("5201");
	Массив.Добавить("5202");
	Массив.Добавить("5203");
	Массив.Добавить("5204");
	Массив.Добавить("5205");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаПроизводство2_2.Номер КАК KDPOS,
		|	СУММА(ЕСТЬNULL(РесурсныеСпецификацииМатериалыИУслуги.КоличествоУпаковок, 0)) КАК VGW01,
		|	МАКСИМУМ(НоменклатураДополнительныеРеквизиты.Значение) КАК ARBPL
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство2_2
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации КАК РесурсныеСпецификации
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РесурсныеСпецификации.МатериалыИУслуги КАК РесурсныеСпецификацииМатериалыИУслуги
		|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
		|					ПО РесурсныеСпецификацииМатериалыИУслуги.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка
		|						И (НоменклатураДополнительныеРеквизиты.Свойство = &Свойство)
		|				ПО РесурсныеСпецификации.Ссылка = РесурсныеСпецификацииМатериалыИУслуги.Ссылка
		|					И (ПОДСТРОКА(РесурсныеСпецификацииМатериалыИУслуги.Номенклатура.Наименование, 1, 4) В (&Массив))
		|			ПО ЗаказНаПроизводство2_2Продукция.Спецификация = РесурсныеСпецификации.Ссылка
		|				И (ЗаказНаПроизводство2_2Продукция.НомерСтроки = 1)
		|		ПО (ЗаказНаПроизводство2_2Продукция.Ссылка = ЗаказНаПроизводство2_2.Ссылка)
		|ГДЕ
		|	ЗаказНаПроизводство2_2.Номер В(&МассивНомеров)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказНаПроизводство2_2.Номер";
	
	Запрос.УстановитьПараметр("МассивНомеров", МассивНомеров);
	Запрос.УстановитьПараметр("Массив", Массив);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("ARBPL"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат Выборка; 

КонецФункции // ()

Функция ДлительностьОперацийКовкиПоЗаказам(МассивНомеров, Период = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказНаПроизвПродукция.Ссылка.Номер КАК Номер,
		|	ВЫБОР
		|		КОГДА НЕ (ВЫРАЗИТЬ(ПараметрыКАЗ.ЗначениеДляКорректировки КАК Справочник.АЭМ_ЦиклыПДУ)) = ЗНАЧЕНИЕ(Справочник.АЭМ_ЦиклыПДУ.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(ПараметрыКАЗ.ЗначениеДляКорректировки КАК Справочник.АЭМ_ЦиклыПДУ)
		|		ИНАЧЕ ВЫРАЗИТЬ(ПараметрыКАЗ.Значение КАК Справочник.АЭМ_ЦиклыПДУ)
		|	КОНЕЦ КАК ЦиклПДУ,
		|	ВЫБОР
		|		КОГДА НЕ (ВЫРАЗИТЬ(ПараметрыКАЗУсилиеПресса.ЗначениеДляКорректировки КАК Справочник.АЭМ_ЗначенияПараметровКАЗ)) = ЗНАЧЕНИЕ(Справочник.АЭМ_ЗначенияПараметровКАЗ.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(ПараметрыКАЗУсилиеПресса.ЗначениеДляКорректировки КАК Справочник.АЭМ_ЗначенияПараметровКАЗ)
		|		ИНАЧЕ ВЫРАЗИТЬ(ПараметрыКАЗУсилиеПресса.Значение КАК Справочник.АЭМ_ЗначенияПараметровКАЗ)
		|	КОНЕЦ КАК УсилиеПресса,
		|	ЗаказКлиентаТовары.Ссылка.Номер КАК НомерЗаказКлиента
		|ПОМЕСТИТЬ врЦиклыПДУ
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизвПродукция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АЭМ_КартаАнализаЗапроса.Параметры КАК ПараметрыКАЗ
		|			ПО ЗаказКлиентаТовары.АЭМ_КартаАнализаЗапроса = ПараметрыКАЗ.Ссылка
		|				И ЗаказКлиентаТовары.АЭМ_ИдентификаторСтрокиКАЗ = ПараметрыКАЗ.КлючСвязи
		|				И (ПараметрыКАЗ.Параметр = &ПараметрЦиклПДУ)
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АЭМ_КартаАнализаЗапроса.Параметры КАК ПараметрыКАЗУсилиеПресса
		|			ПО ЗаказКлиентаТовары.АЭМ_КартаАнализаЗапроса = ПараметрыКАЗУсилиеПресса.Ссылка
		|				И ЗаказКлиентаТовары.АЭМ_ИдентификаторСтрокиКАЗ = ПараметрыКАЗУсилиеПресса.КлючСвязи
		|				И (ПараметрыКАЗУсилиеПресса.Параметр = &ПараметрУсилиеПресса)
		|		ПО ((ВЫРАЗИТЬ(ЗаказНаПроизвПродукция.Ссылка.ДокументОснование КАК Документ.ЗаказКлиента)) = ЗаказКлиентаТовары.Ссылка)
		|			И ЗаказНаПроизвПродукция.Спецификация = ЗаказКлиентаТовары.АЭМ_РесурснаяСпецификация
		|ГДЕ
		|	ЗаказНаПроизвПродукция.Ссылка.Номер В(&МассивНомеров)
		|	И НЕ ЗаказНаПроизвПродукция.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врЦиклыПДУ.Номер КАК Номер,
		|	ДлительностиОпераций.ОперацияПДУ КАК ОперацияПДУ,
		|	ДлительностиОпераций.Длительность КАК Длительность,
		|	врЦиклыПДУ.УсилиеПресса КАК УсилиеПресса,
		|	врЦиклыПДУ.НомерЗаказКлиента КАК НомерЗаказКлиента
		|ПОМЕСТИТЬ врДлительности
		|ИЗ
		|	врЦиклыПДУ КАК врЦиклыПДУ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АЭМ_ДлительностиОперацийПДУ.СрезПоследних(
		|				&Период,
		|				ЦиклПДУ В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						врЦиклыПДУ.ЦиклПДУ КАК ЦиклПДУ
		|					ИЗ
		|						врЦиклыПДУ КАК врЦиклыПДУ)) КАК ДлительностиОпераций
		|		ПО врЦиклыПДУ.ЦиклПДУ = ДлительностиОпераций.ЦиклПДУ
		|			И (ДлительностиОпераций.ОперацияПДУ.ВыгружатьКовку)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	врДлительности.Номер КАК KDPOS,
		|	врДлительности.ОперацияПДУ.Наименование КАК LTXA1,
		|	врДлительности.Длительность КАК VGW01,
		|	ДляКовки.НомерЦеха КАК CEH,
		|	ДляКовки.ARBPL КАК ARBPL,
		|	врДлительности.НомерЗаказКлиента КАК KDAUF,
		|	""1"" КАК VTPOS
		|ИЗ
		|	врДлительности КАК врДлительности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АЭМ_ОперацииПДУ.ГруппыОборудованияДляКовки КАК ДляКовки
		|		ПО врДлительности.ОперацияПДУ = ДляКовки.Ссылка
		|			И (ДляКовки.УсилиеПресса = врДлительности.УсилиеПресса)";
		
	
	Запрос.УстановитьПараметр("МассивНомеров", МассивНомеров);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ПараметрЦиклПДУ", Справочники.АЭМ_ПараметрыКАЗ.ЦиклПДУ);
	Запрос.УстановитьПараметр("ПараметрУсилиеПресса", Справочники.АЭМ_ПараметрыКАЗ.УсилиеПресса);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат Выборка; 

КонецФункции // ()

Функция МассивСтруктур(Данные)

	МассивСтруктур = Новый Массив;
	
	Если ТипЗнч(Данные.op) = Тип("Структура") Тогда
		МассивСтруктур.Добавить(Данные);
	Иначе
		МассивСтруктур = Данные;
	КонецЕсли; 
	
	Возврат МассивСтруктур;

КонецФункции // ()
 
// Возвращает перекодированную строку
Функция ПерекодироватьСтроку(СтрокаКодирования, Кодировка = "UTF-8")
    
    ТекстДляПерекодирования = Новый ТекстовыйДокумент;        
    ТекстДляПерекодирования.УстановитьТипФайла(Кодировка);
    ТекстДляПерекодирования.УстановитьТекст(СтрокаКодирования);
    
    Возврат ТекстДляПерекодирования.ПолучитьТекст();

КонецФункции // ПерекодироватьСтроку