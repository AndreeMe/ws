Функция ВыполнитьПриложение(ПараметрыПроцедуры, IDСообщения = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(IDСообщения) Тогда
		
		// это сделано для отправки сообщения вручную из очереди...
		ОбработатьОбработанное = Ложь;
		ПростаяПередачаПараметров = Ложь;
		wsОбработчики.ОбработатьСообщение(IDСообщения, ОбработатьОбработанное, ПростаяПередачаПараметров);
		Возврат Неопределено;		
	
	КонецЕсли; 
	
	Если ПараметрыПроцедуры.Свойство("Ссылка") И ПараметрыПроцедуры.Свойство("ТипСообщения") Тогда
		
		// запись преварительного сообщения в очередь (только ссылка), запуск обработки...
		
		ID = Неопределено;
		
		wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
				"Отправка не выполнялась",
					ПараметрыПроцедуры.ТипСообщения, 
						Перечисления.wsНаправлениеСообщения.Исходящее,ID,
							ПараметрыПроцедуры.Ссылка, Ложь); // не обработано
		
		// запускаем обработку...
		ПростаяПередачаПараметров = Ложь;
		ВключаяОбработанное = Ложь;
		wsОбработчики.ОбработатьСообщение(ID, ВключаяОбработанное, ПростаяПередачаПараметров);
		
	ИначеЕсли ПараметрыПроцедуры.Свойство("ПростаяПередачаПараметров")	Тогда 
		
		Если НЕ ПараметрыПроцедуры.Обработано Тогда
			
			// обработка 
			СформироватьИОтправитьСообщение(ПараметрыПроцедуры);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецФункции

Процедура СформироватьИОтправитьСообщение(ПараметрыПроцедуры)
	
	// Вот это надо отправить без всякого xsd
	// ordering = "", position= "", production = "", material= "", text= "", number= "", steel= "", blending= "", normative = "", item= "", manufactory= "", customer= "",customer_name= "", date= "", status= "",datestart = "",numberKAZ ="",datebazis_start="",datebazis_end ="",incomponent=""	

	// 1	ordering	Заказ клиента (наряд)	текст (CHAR 10)
	// 2	position	Позиция	число (NUMC 6)
	// 3	production	Производственный заказ (рр-заказ)	текст (CHAR 12)
	// 4	data	Срок поставки по наряду	 дата(дд.мм.гггг)
	// 5	status	Системный статус произв. заказа	текст (CHAR 5)
	//	I0001 – Открыт
	//	I0002 - Деблокирован
	//	I0046 - Закрыт
	// 6	dateend	Дата закрытия заказа	 дата(дд.мм.гггг)
	// 7	melt	Номер плавки	текст (CHAR 50)
	// 8	ingot	Номер слитка	текст (CHAR 50)
	// 9	weight	Вес слитка	текст (CHAR 50)
	// 10	Department*	Подразделение	
	
	// ПараметрыПроцедуры.СсылкаНаОбъект 
	
	// Документ «ЭтапПроизводства2_2»  		
	// Распоряжение.ДокументОснование.Номер	ordering	
	// Распоряжение.Номер	position	
	// Номер	production	
	// Распоряжение.ДатаПотребности	data	
	// Статус	status	Статус документа «Этап производства». Передаются статусы «Сформирован», «Завершен». 
	// При пометке документа «Этап производства» передается статус «Завершен»
	// dateend	Дата постановки документа в очередь к отправке
	// melt	Не передается
	// ingot	Не передается
	// ТЧ.ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок	weight	Из первой строки
	// Подразделение	Department	
	
	// отправляем только три статуса, остальное не отправляем:
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПараметрыПроцедуры.СсылкаНаОбъект);    
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Начат", Перечисления.СтатусыЭтаповПроизводства2_2.Начат);       // деблокирован
	Запрос.УстановитьПараметр("Формируется", Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	Запрос.УстановитьПараметр("Сформирован", Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован); // открыт
	Запрос.УстановитьПараметр("КВыполнению", Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	Запрос.УстановитьПараметр("Завершен", Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);    // закрыт
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЭтапПроизводства2_2.Распоряжение.ДокументОснование.Номер КАК ordering,
		|	ЭтапПроизводства2_2.Распоряжение.Номер КАК position,
		|	ЭтапПроизводства2_2.Номер КАК production,
		|	ЭтапПроизводства2_2.Распоряжение.ДатаПотребности КАК date,
		|	ВЫБОР
		|		КОГДА ЭтапПроизводства2_2.ПометкаУдаления
		|			ТОГДА ""I0046""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЭтапПроизводства2_2.Статус = &Начат
		|					ТОГДА ""I0002""
		|				КОГДА ЭтапПроизводства2_2.Статус = &Сформирован
		|					ТОГДА ""I0001""
		|				КОГДА ЭтапПроизводства2_2.Статус = &Завершен
		|					ТОГДА ""I0046""
		|			КОНЕЦ
		|	КОНЕЦ КАК status,
		|	&ТекущаяДата КАК dateend,
		|	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Количество КАК weight
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами
		|		ПО (ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка = ЭтапПроизводства2_2.Ссылка)
		|			И (ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.НомерСтроки = 1)
		|ГДЕ
		|	НЕ ЭтапПроизводства2_2.Статус В (&Формируется, &КВыполнению)
		|	И ЭтапПроизводства2_2.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();

	ОтправитьСообщение(ВыборкаДетальныеЗаписи, ПараметрыПроцедуры);	
	
КонецПроцедуры

Процедура ОтправитьСообщение(Выборка, ПараметрыПроцедуры, Отказ = Ложь)
	
	
	wsНастройкиВебСервисов =  wsОбработчики.ОписаниеВебСервиса(ПараметрыПроцедуры.ТипСообщения);
	
	// Подключение
	Определения = Новый WSОпределения(wsНастройкиВебСервисов.МестоположениеWSDL, 
							wsНастройкиВебСервисов.ИмяПользователя, wsНастройкиВебСервисов.Пароль);
							
							
	ОписниеТипаЧисло = Новый ОписаниеТипов("Число");							
	position = ОписниеТипаЧисло.ПривестиЗначение(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.position));							
							
	Попытка
		Прокси = Новый WSПрокси(Определения,
									wsНастройкиВебСервисов.URIПространстваИмен, 
											wsНастройкиВебСервисов.ИмяWEBСервиса, 
													wsНастройкиВебСервисов.ИмяТочкиПодключения,,60);
		Прокси.Пользователь = wsНастройкиВебСервисов.ИмяПользователя;
		Прокси.Пароль = wsНастройкиВебСервисов.Пароль;
		
		Результат = Прокси.PutOrders(
			Выборка.ordering,
			position,  // integer
			Выборка.production,
			Выборка.date,
			Выборка.status,
			Выборка.dateend,
			0,
			0,
			Выборка.weight); 
		
		Если Результат Тогда
			Сообщить("Готово.");
		Иначе
			Сообщить("Ошибка на стороне приемника.");
		КонецЕсли; 
		
	Исключение
		Отказ = Истина;
		Сообщить("Ошибка: " + ОписаниеОшибки());
	КонецПопытки;
	
	
	Текст = "ordering " + Выборка.ordering + Символы.ПС
				+ "position " + position + Символы.ПС // integer
					+ "production " + Выборка.production + Символы.ПС 
						+ "date " + Выборка.date + Символы.ПС 
							+ "status " + Выборка.status + Символы.ПС
								+ "dateend " + Выборка.dateend + Символы.ПС 
									+ "melt 0" + Символы.ПС
										+ "ingot 0" + Символы.ПС
											+ "weight " + Выборка.weight;
	
	Если Не Отказ Тогда

		Попытка
			
			// Обновляем сообщение в регистре
			wsОбработчики.ЗаписатьСообщениеВОчередьСообщений(
				Текст, 
					ПараметрыПроцедуры.ТипСообщения, 
						Перечисления.wsНаправлениеСообщения.Исходящее,
							ПараметрыПроцедуры.IDСообщения,
								ПараметрыПроцедуры.СсылкаНаОбъект, 
									Истина, // обработано
										ПараметрыПроцедуры.Дата); 
		Исключение
			
			Сообщить("Ошибка: " + ОписаниеОшибки());
			
		КонецПопытки; 
	
	КонецЕсли; 
	

КонецПроцедуры
 
 