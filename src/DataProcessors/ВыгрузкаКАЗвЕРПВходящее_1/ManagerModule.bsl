// Первая фаза. Получить эти параметры в ЕРП, естественно строки в элементы справочника «значения параметров КАЗ».

// Наверное, надо сгенерить КАЗ

Функция ВыполнитьПриложение(ХранилищеЗначения, IDСообщения) Экспорт
	
	врФабрикаXDTO = wsОбработчики.ФабрикаXDTOПоТипуСообщения("Выгрузка КАЗ в ЕРП");
	
	Сообщение = ХранилищеЗначения.Получить();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Сообщение);
	ОбXDTO = врФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();
	
	Сообщения = "";
	
	Если ТипЗнч(ОбXDTO) = Тип("ОбъектXDTO") Тогда
		Результат = Обработать(ОбXDTO, IDСообщения);
	ИначеЕсли ТипЗнч(ОбXDTO) = Тип("СписокXDTO") Тогда
		Для каждого row Из ОбXDTO Цикл
			Результат = Сообщения + " 
			|" + Обработать(row, IDСообщения);
		КонецЦикла; 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция Обработать(rows, IDСообщения)
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	Результат = Новый Структура("Документ, Сообщение", Неопределено, "");
	
	АЭМ_КартаАнализаЗапроса = НайтиКАЗ(rows.UID);
	
	Если ЗначениеЗаполнено(АЭМ_КартаАнализаЗапроса) Тогда
		ТекОбъект = АЭМ_КартаАнализаЗапроса.ПолучитьОбъект();
	Иначе
		ТекОбъект = Документы.АЭМ_КартаАнализаЗапроса.СоздатьДокумент();
		ТекОбъект.ИдентификаторКАЗ = rows.UID; 
		ТекОбъект.Дата = ТекущаяДатаСеанса();
		ТекОбъект.Записать();
	КонецЕсли; 
	
	СтруктураRows = ИнтеграцияИС.ОбъектXDTOВСтруктуру(rows);
	
	Если СтруктураRows.Свойство("kaz") Тогда
		ТекОбъект.КАЗ = rows.kaz; 
	КонецЕсли; 
	
	Попытка
		ТекОбъект.Заблокировать();
	Исключение
		// не в этот раз...
		Результат.Сообщение = Строка(ТекОбъект) + ": не удалось заблокировать объект.";
		Возврат Результат;	
	КонецПопытки;
	
	ТекОбъект.Комментарий = "# загружен из КАЗ " + ТекущаяДатаСеанса();
	
	Выборка_1 = Таблица_1();


	// КМАТы, параметры
	МассивКМАТ = Новый Массив();
	
	Если ТипЗнч(rows.row) = Тип("ОбъектXDTO") Тогда
		МассивКМАТ.Добавить(ОбработатьКМАТ(rows.row, ТекОбъект.Ссылка, Выборка_1));	
	ИначеЕсли ТипЗнч(rows.row) = Тип("СписокXDTO") Тогда
		Для каждого row Из rows.row Цикл
			МассивКМАТ.Добавить(ОбработатьКМАТ(row, ТекОбъект.Ссылка, Выборка_1));	
		КонецЦикла; 
	КонецЕсли; 
	
	ТекОбъект.Товары.Очистить();
	ТекОбъект.Параметры.Очистить();
	
	Для каждого КМАТ Из МассивКМАТ Цикл
		
		// добаляем строки в тч Товары 
		Нов = ТекОбъект.Товары.Добавить();
		ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		Нов.ИдентификаторСтроки = ИдентификаторСтроки;
		ЗаполнитьЗначенияСвойств(Нов, КМАТ);
		
		// добавляем параметры
		МаркаСтали = Неопределено;
		
		Для каждого Пар Из КМАТ.Параметры Цикл
			Для каждого КиЗ Из Пар Цикл
				Нов = ТекОбъект.Параметры.Добавить();
				Нов.КлючСвязи = ИдентификаторСтроки;
				Нов.Параметр  = КиЗ.Ключ;
				Нов.Значение  = КиЗ.Значение;
				Если КиЗ.Ключ = Справочники.АЭМ_ПараметрыКАЗ.МаркаСтали Тогда
				    МаркаСтали = КиЗ.Значение; 
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла; 
		
		// дозаполнить параметры. выдрать из марки стали четрые параметра, и запихать их в параметры
		// ТипСталиКузница  
		// ТипВспомМатериаловБЕСталь  
		// СостояниеСтали 
		// ТипСталиОГС
		Если ЗначениеЗаполнено(МаркаСтали) Тогда
			
			ДанныеМаркиСтали = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МаркаСтали, 
				"ТипСталиКузница,ТипВспомМатериаловБЕСталь,СостояниеСтали,ТипСталиОГС,Спецсталь");
			
			Нов = ТекОбъект.Параметры.Добавить();
			Нов.КлючСвязи = ИдентификаторСтроки;
			Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.ТипСталиКузница;
			Нов.Значение  = ДанныеМаркиСтали.ТипСталиКузница;
			
			Нов = ТекОбъект.Параметры.Добавить();
			Нов.КлючСвязи = ИдентификаторСтроки;
			Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.ТипВспомМатериаловБЕСталь;
			Нов.Значение  = ДанныеМаркиСтали.ТипВспомМатериаловБЕСталь;
			
			Нов = ТекОбъект.Параметры.Добавить();
			Нов.КлючСвязи = ИдентификаторСтроки;
			Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.СостояниеСтали;
			Нов.Значение  = ДанныеМаркиСтали.СостояниеСтали;
			
			Нов = ТекОбъект.Параметры.Добавить();
			Нов.КлючСвязи = ИдентификаторСтроки;
			Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.ТипСталиОГС;
			Нов.Значение  = ДанныеМаркиСтали.ТипСталиОГС;
			
			Нов = ТекОбъект.Параметры.Добавить();
			Нов.КлючСвязи = ИдентификаторСтроки;
			Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.Спецсталь;
			Нов.Значение  = ДанныеМаркиСтали.Спецсталь;
			
		КонецЕсли; 
		
		// Цех предварительной ТО (CEH_TO)
		// Заполнение: автоматическое
		// Момент заполнения: при создании КАЗ в ЕРП
		// Условие определения значения: по значению параметра  - Усилие пресса (PRESS_POWER). 
		// Если PRESS_POWER = 1250 или PRESS_POWER = 3200, то CEH_TO = цех 20
		// Если PRESS_POWER = 6000 или PRESS_POWER = 12000, то CEH_TO = цех 47
		// Если ЗначениеЗаполнено( Тогда
		
		НайденныеСтроки = 
			ТекОбъект.Параметры.НайтиСтроки(Новый Структура("КлючСвязи, Параметр", ИдентификаторСтроки, Справочники.АЭМ_ПараметрыКАЗ.УсилиеПресса)); 

		Если НЕ НайденныеСтроки.Количество() = 0 Тогда
			
			УсилиеПресса = ОписаниеТипаЧисло.ПривестиЗначение(НайденныеСтроки[0].Значение);
			
			Если УсилиеПресса = 1250 ИЛИ УсилиеПресса = 3200 Тогда
				
				Нов = ТекОбъект.Параметры.Добавить();
				Нов.КлючСвязи = ИдентификаторСтроки;
				Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.ЦехПредварительнойТО;
				Нов.Значение  = Справочники.АЭМ_ЗначенияПараметровКАЗ.НайтиПоНаименованию("Цех 20", Истина, Справочники.АЭМ_ПараметрыКАЗ.ЦехПредварительнойТО);
				
			ИначеЕсли УсилиеПресса = 6000 ИЛИ УсилиеПресса = 12000 Тогда
				
				Нов = ТекОбъект.Параметры.Добавить();
				Нов.КлючСвязи = ИдентификаторСтроки;
				Нов.Параметр  = Справочники.АЭМ_ПараметрыКАЗ.ЦехПредварительнойТО;
				Нов.Значение  = Справочники.АЭМ_ЗначенияПараметровКАЗ.НайтиПоНаименованию("Цех 47", Истина, Справочники.АЭМ_ПараметрыКАЗ.ЦехПредварительнойТО);
				
			КонецЕсли; 
		
		КонецЕсли; 
		
		// 
		
	КонецЦикла; 
	
	
	Попытка
		ТекОбъект.Записать();
	Исключение
		Результат.Сообщение = Строка(ТекОбъект) + ": не удалось записать документ.";
		Возврат Результат;	
	КонецПопытки;
	
	Результат.Документ = ТекОбъект.Ссылка;
	
	Возврат Результат; 
	
КонецФункции // ()

Функция ОбработатьКМАТ(row, Ссылка, Выборка_1)
	
	ДанныеКмат = Новый Структура("Номенклатура, Параметры");
	
	ПоляКмат = Новый Структура();
	
	//МассивПолейКмат = МассивПолейКмат();
	
	ДанныеСтроки = ДанныеСтроки(row);
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	// ЕМ 11.12.20
	// Новый Параметр КАЗ «Итого МО цех 66, ч», наименование SAP - WORK _MO, тип - Число 5(3).
	// Данный параметр расчетный, ровна сумме числовых параметров:
	// I_BKS_2	I_BKS_1	I_BTS_2	I_BTS_1	I_RS_2	I_RS_1	I_FS	I_MTS	I_STS_1	I_STS_2	I_STS_3	I_LTS_2	I_LTS_1	I_SAW_66	I_MKS	I_GCS_1	I_GCS_2	I_GCS_3	I_GCS_4
	WORK_MO = 0;
	МассивИмен = СтрРазделить("I_BKS_2 I_BKS_1 I_BTS_2 I_BTS_1 I_RS_2 I_RS_1 I_FS I_MTS I_STS_1 I_STS_2 I_STS_3 I_LTS_2 I_LTS_1 I_SAW_66 I_MKS I_GCS_1 I_GCS_2 I_GCS_3 I_GCS_4", " ");
	Для каждого Имя Из МассивИмен Цикл
		Если ДанныеСтроки.Свойство(Имя) Тогда
			WORK_MO = WORK_MO + ОписаниеТипаЧисло.ПривестиЗначение(ДанныеСтроки[Имя]);
		КонецЕсли; 
	КонецЦикла; 
	Если ЗначениеЗаполнено(WORK_MO) Тогда
	    ДанныеСтроки.Вставить("WORK_MO", WORK_MO);
	КонецЕсли; 
	//

	// КМАТ только ищем, ничего не создаем...
	
	КМАТ = НайтиКмат(ДанныеСтроки, Выборка_1);
	
	ДанныеКмат.Вставить("Номенклатура", КМАТ);
	
	ВидНом = Лев(Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КМАТ, "ВидНоменклатуры")), 3);
	
	// ЕМ 14.12.20
	// Параметр «Тип листа», имя SAP TYPE_PLATE.
	// Параметр и его значение создается автоматически при создании документа КАЗ.
	// Условия создания параметра: Вид номенклатуры: F-6 или F-8.
	// Условие определения значений для параметра: 
	//	F-6 = «Лист»
	//	F-8 = «Двуслойка»
	Если ВидНом = "F-6" Тогда
	    ДанныеСтроки.Вставить("TYPE_PLATE", "Лист");
	ИначеЕсли ВидНом = "F-8" Тогда
		ДанныеСтроки.Вставить("TYPE_PLATE", "Двуслойка");
	КонецЕсли; 
	// 
	
	
	// Обрабатываем значения параметров, только ищем, ничего не создаем...
	
	МассивПараметров = Новый Массив();
	
	Для каждого Параметр Из ДанныеСтроки Цикл
		Результат = ОбработатьПараметр(Параметр, Ссылка);
		Если ЗначениеЗаполнено(Результат) Тогда
			МассивПараметров.Добавить(Результат);	
		КонецЕсли; 
	КонецЦикла; 
	
	ДанныеКмат.Параметры = МассивПараметров;
	
	Возврат ДанныеКМАТ;
	
КонецФункции // ()

Функция ОбработатьПараметр(Параметр, Ссылка)
	
	Результат = Новый Соответствие();
	
	ОписаниеТипаЧисло  = Новый ОписаниеТипов("Число");  
	ЧисловоеЗначение   = ОписаниеТипаЧисло.ПривестиЗначение(Параметр.Значение); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АЭМ_ПараметрыКАЗ.Ссылка КАК ПараметрКАЗ,
		|	ЕСТЬNULL(АЭМ_ЗначенияПараметровКАЗ.Ссылка, НЕОПРЕДЕЛЕНО) КАК ЗначениеПараметраКАЗ,
		|	АЭМ_ПараметрыКАЗ.ТипПараметра КАК ТипПараметра
		|ИЗ
		|	Справочник.АЭМ_ПараметрыКАЗ КАК АЭМ_ПараметрыКАЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АЭМ_ЗначенияПараметровКАЗ КАК АЭМ_ЗначенияПараметровКАЗ
		|		ПО (АЭМ_ЗначенияПараметровКАЗ.Владелец = АЭМ_ПараметрыКАЗ.Ссылка)
		|			И (ПОДСТРОКА(АЭМ_ПараметрыКАЗ.ТипПараметра, 1, 36) = ""Справочник.АЭМ_ЗначенияПараметровКАЗ"")
		|			И (АЭМ_ЗначенияПараметровКАЗ.Наименование = &Наименование)
		|ГДЕ
		|	АЭМ_ПараметрыКАЗ.ИмяСАП = &ИмяСАП
		|	И НЕ АЭМ_ПараметрыКАЗ.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ИмяСАП", Параметр.Ключ);
	Запрос.УстановитьПараметр("Наименование", Параметр.Значение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Тип = ВыборкаДетальныеЗаписи.ТипПараметра;
			
			Если Лев(Тип,5) = "Число" Тогда
				
				Результат.Вставить(ВыборкаДетальныеЗаписи.ПараметрКАЗ, Параметр.Значение);
				
			ИначеЕСли Тип = "Справочник.АЭМ_ЗначенияПараметровКАЗ" Тогда
				
				Результат.Вставить(ВыборкаДетальныеЗаписи.ПараметрКАЗ, ВыборкаДетальныеЗаписи.ЗначениеПараметраКАЗ);
				
			Иначе
				
				Результат.Вставить(
				ВыборкаДетальныеЗаписи.ПараметрКАЗ, НайтиЗначениеПараметраСУчетомТипа(Параметр, ВыборкаДетальныеЗаписи));
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Сообщить("Не найден параметр по имени САП " + Параметр.Ключ);
		
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ()

Функция НайтиЗначениеПараметраСУчетомТипа(Параметр, Выборка)
	
	Тип = Выборка.ТипПараметра;
	
	ОписаниеТипаЧисло  = Новый ОписаниеТипов("Число");  
	Значение   = ОписаниеТипаЧисло.ПривестиЗначение(Параметр.Значение); 
	Если ЗначениеЗаполнено(Значение) Тогда
		Значение = Формат(Значение, "ЧГ=0");
	Иначе
		Значение = Параметр.Значение;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", Значение);
	
	Если Лев(Тип,5) = "Справ" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Объект.Ссылка КАК Ссылка
		|ИЗ
		|" + Тип + " КАК Объект
		|ГДЕ
		|	Объект.Наименование = &Наименование";
		
		
	ИначеЕсли Лев(Тип,5) = "Докум" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Объект.Ссылка КАК Ссылка
		|ИЗ
		|" + Тип + " КАК Объект
		|ГДЕ
		|	Объект.Номер = &Наименование";
		
		Запрос.УстановитьПараметр("Наименование", Значение);
		
	ИначеЕсли Лев(Тип,5) = "Число" Тогда
		Возврат Параметр.Значение;
		
	ИначеЕсли Лев(Тип,6) = "Строка" Тогда
		Возврат Параметр.Значение;
		
	Иначе
		Сообщить("Странный тип параметра " + Выборка.ПараметрКАЗ);
		Возврат Неопределено;
	КонецЕсли; 

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;

КонецФункции // ()
 
Функция МассивПолейКмат()
	
	МассивПолейКмат = Новый Массив;
	МассивПолейКмат.Добавить("CLASS");
	МассивПолейКмат.Добавить("CLASS_1");	
	МассивПолейКмат.Добавить("DRAW_NUM");    
	МассивПолейКмат.Добавить("MASS_FORGE");	
	МассивПолейКмат.Добавить("MASS_FORGE_MAX");	
	МассивПолейКмат.Добавить("COFF_INGOT_FRG");
	Возврат МассивПолейКмат;

КонецФункции // ()
    
Функция НайтиКАЗ(ИдентификаторКАЗ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АЭМ_КартаАнализаЗапроса.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.АЭМ_КартаАнализаЗапроса КАК АЭМ_КартаАнализаЗапроса
		|ГДЕ
		|	АЭМ_КартаАнализаЗапроса.ИдентификаторКАЗ = &ИдентификаторКАЗ";
	
	Запрос.УстановитьПараметр("ИдентификаторКАЗ", ИдентификаторКАЗ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		ВыборкаДетальныеЗаписи.Следующий();
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
	
КонецФункции // ()

Функция НайтиКмат(ДанныеСтроки, Выборка_1)
	
	//1)	Формула определения номенклатуры для поставочных единиц с видом продукции: жидкая сталь (S-1), слиток (S-2):
	//	Вид продукции для номенклатуры + «_» + Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки;
	
	//2)	Формула определения номенклатуры для поставочных единиц с видом продукции переплавной слиток:
	// Вид продукции для номенклатуры + «_» + Тип слитка «_» + Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки;
	
	//3)	Формула определения номенклатуры для поставочных единиц с видом продукции двуслойный лист и массой поковки <= 16,0 т:
	// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» + Марка стали + «_» + Номер шихтовой карточки + «_» + Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
	
	//4)	Формула определения номенклатуры для поставочных единиц с видом продукции двуслойный лист и массой поковки > 16,0 т:
	// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» +Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки + «_» + Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
	
	// ИЗМЕНЕНО:
	// 4)Формула определения номенклатуры для поставочных единиц с видом продукции двуслойный лист и массой поковки > 16,0 т:
	//  Вид продукции для номенклатуры + «_Б_М_» + Марка стали + «_» + Номер шихтовой карточки + «_» 
	//    + Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
	
	
	//5)	Формула определения номенклатуры для поставочных единиц видов продукции, 
	//			кроме жидкой стали, слитка, переплавного слитка и массой поковки <= 16,0 т:
	// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» + Марка стали + «_» + Номер шихтовой карточки.
	
	//6)	Формула определения номенклатуры для поставочных единиц всех видов продукции, 
	//			кроме жидкой стали, слитка, переплавного слитка и массой поковки > 16,0 т:
	// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» +Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки.
	
	ТипМассыПоковки = "М";
	Если ДанныеСтроки.Свойство("MASS_FORGE") И ДанныеСтроки.MASS_FORGE > 16 Тогда
		ТипМассыПоковки = "Б";
	КонецЕсли; 
	
	ТипМассыСлитка = "М";  // <= 55 
	Если ДанныеСтроки.Свойство("MASS_INGOT") 
			И ДанныеСтроки.MASS_INGOT > 55 И ДанныеСтроки.MASS_INGOT <= 137 Тогда 
		ТипМассыСлитка = "С";
	ИначеЕсли ДанныеСтроки.Свойство("MASS_INGOT") И ДанныеСтроки.MASS_INGOT > 137 Тогда
		ТипМассыСлитка = "Б"; // " > 137"
	КонецЕсли; 
	
	Выборка_1.Сбросить(); // вид номенклатуры, вид продукции, вид продукции для номенклатуры
	
	Если НЕ Выборка_1.НайтиСледующий(Новый Структура("CLASS", ДанныеСтроки.CLASS)) Тогда
		Сообщить("Не найден КМАТ для CLASS " + ДанныеСтроки.CLASS);
		Возврат Неопределено;
	КонецЕсли; 
	
	// выбор формулы...
	
	Формула = 0;
	
	// + 1
	Если Выборка_1.ВидПродукции = "ЖИДКАЯ СТАЛЬ" ИЛИ Выборка_1.ВидПродукции = "СЛИТОК" Тогда
		
		// Вид продукции для номенклатуры + «_» + Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки;
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыСлитка + "_" 
								+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
									+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "");
		Формула = 1;
		
	// + 2
	ИначеЕсли Выборка_1.ВидПродукции = "СЛИТОК ПЕРЕПЛАВНОЙ" Тогда
		
		// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» + Марка стали + «_» 
		//		+ Номер шихтовой карточки + «_» 
		// 			+ Марка стали плакирующего слоя (НЕТ ТАКОГО ПАРАМЕТРА)+ «_» + Номер шихтовой карточки плакирующего слоя.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыПоковки + "_" 
								+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
									+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "")  + "_" 
										+ ?(ДанныеСтроки.Свойство("STEEL_PLK"), ДанныеСтроки.STEEL_PLK, "") + "_" 
											+ ?(ДанныеСтроки.Свойство("NUMB_MIXT_PLK"), Формат(ДанныеСтроки.NUMB_MIXT_PLK, "ЧГ=0"), "");
									
		Формула = 2;
		
	// + 3
	ИначеЕсли Выборка_1.ВидПродукции = "ДВУСЛОЙНЫЙ ЛИСТ" И ДанныеСтроки.MASS_FORGE <= 16 Тогда
		
		// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» + Марка стали + «_» 
		//		+ Номер шихтовой карточки + «_» + Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыПоковки + "_" 
								+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
									+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "")  + "_" 
										+ ?(ДанныеСтроки.Свойство("STEEL_PLK"), ДанныеСтроки.STEEL_PLK, "") + "_" 
											+ ?(ДанныеСтроки.Свойство("NUMB_MIXT_PLK"), Формат(ДанныеСтроки.NUMB_MIXT_PLK, "ЧГ=0"), "");
											
		Формула = 3;
											
	// + 4
	ИначеЕсли Выборка_1.ВидПродукции = "ДВУСЛОЙНЫЙ ЛИСТ" И ДанныеСтроки.MASS_FORGE > 16 Тогда
		
		// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» +Тип массы слитка + «_» 
		//		+ Марка стали + «_» + Номер шихтовой карточки + «_»
		//			+ Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыПоковки + "_" 
								+ ТипМассыСлитка + "_" 
									+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
										+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "")  + "_" 
											+ ?(ДанныеСтроки.Свойство("STEEL_PLK"), ДанныеСтроки.STEEL_PLK, "") + "_" 
												+ ?(ДанныеСтроки.Свойство("NUMB_MIXT_PLK"), Формат(ДанныеСтроки.NUMB_MIXT_PLK, "ЧГ=0"), "");
												
		// ИЗМЕНЕНО:
		// 4)Формула определения номенклатуры для поставочных единиц с видом продукции двуслойный лист и массой поковки > 16,0 т:
		//  Вид продукции для номенклатуры + «_Б_М_» + Марка стали + «_» + Номер шихтовой карточки + «_» 
			//    + Марка стали плакирующего слоя + «_» + Номер шихтовой карточки плакирующего слоя.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_Б_М_" 
									+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
										+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "")  + "_" 
											+ ?(ДанныеСтроки.Свойство("STEEL_PLK"), ДанныеСтроки.STEEL_PLK, "") + "_" 
												+ ?(ДанныеСтроки.Свойство("NUMB_MIXT_PLK"), Формат(ДанныеСтроки.NUMB_MIXT_PLK, "ЧГ=0"), "");

		Формула = 4;

	// + 5
	ИначеЕсли НЕ Выборка_1.ВидПродукции = "ЖИДКАЯ СТАЛЬ" 
					И НЕ Выборка_1.ВидПродукции = "СЛИТОК" 
						И НЕ Выборка_1.ВидПродукции = "СЛИТОК ПЕРЕПЛАВНОЙ" 
							И ДанныеСтроки.MASS_FORGE <= 16 Тогда
							
		// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» + Марка стали + «_» + Номер шихтовой карточки.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыПоковки + "_" 
								+ ?(ДанныеСтроки.Свойство("STEEL"), ДанныеСтроки.STEEL, "") + "_" 
									+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "");
		
		
		Формула = 5;

	// + 6
	ИначеЕсли НЕ Выборка_1.ВидПродукции = "ЖИДКАЯ СТАЛЬ" 
					И НЕ Выборка_1.ВидПродукции = "СЛИТОК" 
						И НЕ Выборка_1.ВидПродукции = "СЛИТОК ПЕРЕПЛАВНОЙ" 
							И ДанныеСтроки.MASS_FORGE > 16 Тогда
							
		// Вид продукции для номенклатуры + «_» + Тип массы поковки + «_» +Тип массы слитка + «_» + Марка стали + «_» + Номер шихтовой карточки.
		Наименование = Выборка_1.ВидПродукцииДляНоменклатуры + "_" 
							+ ТипМассыПоковки + "_" 
								+ ТипМассыСлитка + "_" 
									+ ДанныеСтроки.STEEL + "_" 
										+ ?(ДанныеСтроки.Свойство("NUMB_MIXT"), Формат(ДанныеСтроки.NUMB_MIXT, "ЧГ=0"), "");

		Формула = 6;
		
	Иначе
		
		Сообщить("Не определенная формула определения номенклатуры");
		
	КонецЕсли; 
	
	// ищем номенклатуру КМАТ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Не найден КМАТ: " + Наименование + " ( формула " + Формула + ", вид пр. " + Выборка_1.ВидПродукцииДляНоменклатуры + ", MASS_FORGE = " + ДанныеСтроки.MASS_FORGE + ")");
		Возврат Неопределено;
	КонецЕсли; 
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Возврат ВыборкаДетальныеЗаписи.Ссылка;

	
КонецФункции // ()
 
Функция Таблица_1()

	ТабДок = ПолучитьМакет("Таблица_1");
	ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы));
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	Таб = ПостроительОтчета.Результат.Выгрузить();
	
	// найдем виды номенклатуры

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таб", Таб);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таб.*
	|ПОМЕСТИТЬ Таб
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.*,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ИЗ
	|	Таб КАК Таб
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО Таб.ВидНоменклатурыСтрока = ВидыНоменклатуры.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	    Если ЗначениеЗаполнено(Выборка.ВидНоменклатуры) Тогда
			Продолжить;
		КонецЕсли;
		//Сообщить("Не найден вид номенклатуры " + Выборка.ВидНоменклатурыСтрока);
	КонецЦикла; 
	
	Выборка.Сбросить();
	
	Возврат Выборка;

КонецФункции // ()

Функция ДанныеСтроки(row)
	
	ОписаниеТипа = Новый ОписаниеТипов("Число");  
	
	ДанныеСтроки = Новый Структура;
	
	Если ТипЗнч(row.columns) = Тип("ОбъектXDTO") Тогда
		Значение = row.columns.val;
		ЗначениеЧисло  = ОписаниеТипа.ПривестиЗначение(Значение); 
		ЗначениеСтрока = СтрЗаменить(Значение		, "(", "");
		ЗначениеСтрока = СтрЗаменить(ЗначениеСтрока	, ")", "");
		Если ЗначениеЗаполнено(ЗначениеЧисло) Тогда
			ДанныеСтроки.Вставить(row.columns.name, ЗначениеЧисло);
		Иначе
			ДанныеСтроки.Вставить(row.columns.name, ЗначениеСтрока);
		КонецЕсли; 
	ИначеЕсли ТипЗнч(row.columns) = Тип("СписокXDTO") Тогда
		Для каждого col Из row.columns Цикл
			Значение = col.val;
			ЗначениеЧисло = ОписаниеТипа.ПривестиЗначение(Значение); 
			ЗначениеСтрока = СтрЗаменить(Значение		, "(", "");
			ЗначениеСтрока = СтрЗаменить(ЗначениеСтрока	, ")", "");
			Если ЗначениеЗаполнено(ЗначениеЧисло) Тогда
				ДанныеСтроки.Вставить(col.name, ЗначениеЧисло);
			Иначе
				ДанныеСтроки.Вставить(col.name, ЗначениеСтрока);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Возврат ДанныеСтроки;
	
КонецФункции // ()

